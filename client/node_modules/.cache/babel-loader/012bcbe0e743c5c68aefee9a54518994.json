{"ast":null,"code":"import axios from 'axios';\nimport ConstantList from '../../appConfig';\nvar API_PATH = ConstantList.API_ENPOINT + '/public';\nexport var saveAngency = function saveAngency(Angency, UserId) {\n  var url = API_PATH + '/' + UserId;\n  return axios.post(url, Angency);\n};\nexport var checkSignUp = function checkSignUp(KeyWord) {\n  var url = API_PATH + '/' + KeyWord;\n  return axios.post(url);\n};\nexport var createOffer = function createOffer(AgencyId) {\n  var url = API_PATH + '/signup/createOffer/' + AgencyId;\n  return axios.post(url);\n};\nexport var createUser = function createUser(User) {\n  var url = ConstantList.API_ENPOINT + '/register';\n  return axios({\n    method: 'post',\n    url: url,\n    data: User\n  });\n};\nexport var checkEmail = function checkEmail(agency) {\n  var url = API_PATH + '/checkEmail';\n  return axios.post(url, agency);\n};\nexport var checkUsername = function checkUsername(agency) {\n  var url = API_PATH + '/checkUsername';\n  return axios.post(url, agency);\n};\n\n// Only need email to getToken\nexport var forgotPassword = function forgotPassword(user) {\n  var url = ConstantList.API_ENPOINT + '/ForgetPassword' + \"?email=\".concat(user);\n  return axios.post(url, user);\n};\n\n// Email and password to save user\nexport var confirmForgotPassword = function confirmForgotPassword(token, id) {\n  var url = API_PATH + \"/confirmResetPassword\";\n  var params = {\n    token: token,\n    id: id\n  };\n  return axios({\n    method: 'get',\n    url: url,\n    params: params\n  });\n};\nexport var resetPassword = function resetPassword(user, token) {\n  var url = API_PATH + '/saveNewPassword';\n  return axios({\n    method: 'post',\n    url: url,\n    params: {\n      token: token\n    },\n    data: user\n  });\n};","map":{"version":3,"names":["axios","ConstantList","API_PATH","API_ENPOINT","saveAngency","Angency","UserId","url","post","checkSignUp","KeyWord","createOffer","AgencyId","createUser","User","method","data","checkEmail","agency","checkUsername","forgotPassword","user","confirmForgotPassword","token","id","params","resetPassword"],"sources":["D:/WorkSpace/client/src/app/views/sessions/SignUpService.js"],"sourcesContent":["import axios from 'axios';\nimport ConstantList from '../../appConfig';\nconst API_PATH = ConstantList.API_ENPOINT + '/public';\n\nexport const saveAngency = (Angency, UserId) => {\n\tvar url = API_PATH + '/' + UserId;\n\treturn axios.post(url, Angency);\n};\n\nexport const checkSignUp = (KeyWord) => {\n\tvar url = API_PATH + '/' + KeyWord;\n\treturn axios.post(url);\n};\n\nexport const createOffer = (AgencyId) => {\n\tvar url = API_PATH + '/signup/createOffer/' + AgencyId;\n\treturn axios.post(url);\n};\n\nexport const createUser = (User) => {\n\tvar url = ConstantList.API_ENPOINT + '/register';\n\treturn axios({\n\t\tmethod: 'post',\n\t\turl: url,\n\t\tdata: User,\n\t});\n};\n\nexport const checkEmail = (agency) => {\n\tvar url = API_PATH + '/checkEmail';\n\treturn axios.post(url, agency);\n};\n\nexport const checkUsername = (agency) => {\n\tvar url = API_PATH + '/checkUsername';\n\treturn axios.post(url, agency);\n};\n\n// Only need email to getToken\nexport const forgotPassword = (user) => {\n\tvar url = ConstantList.API_ENPOINT + '/ForgetPassword' + `?email=${user}`;\n\n\treturn axios.post(url, user);\n};\n\n// Email and password to save user\nexport const confirmForgotPassword = (token, id) => {\n\tvar url = API_PATH + `/confirmResetPassword`;\n\tconst params = {\n\t\ttoken: token,\n\t\tid: id,\n\t};\n\treturn axios({ method: 'get', url: url, params: params });\n};\n\nexport const resetPassword = (user, token) => {\n\tlet url = API_PATH + '/saveNewPassword';\n\treturn axios({\n\t\tmethod: 'post',\n\t\turl: url,\n\t\tparams: {\n\t\t\ttoken: token,\n\t\t},\n\t\tdata: user,\n\t});\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,iBAAiB;AAC1C,IAAMC,QAAQ,GAAGD,YAAY,CAACE,WAAW,GAAG,SAAS;AAErD,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAIC,OAAO,EAAEC,MAAM,EAAK;EAC/C,IAAIC,GAAG,GAAGL,QAAQ,GAAG,GAAG,GAAGI,MAAM;EACjC,OAAON,KAAK,CAACQ,IAAI,CAACD,GAAG,EAAEF,OAAO,CAAC;AAChC,CAAC;AAED,OAAO,IAAMI,WAAW,GAAG,SAAdA,WAAW,CAAIC,OAAO,EAAK;EACvC,IAAIH,GAAG,GAAGL,QAAQ,GAAG,GAAG,GAAGQ,OAAO;EAClC,OAAOV,KAAK,CAACQ,IAAI,CAACD,GAAG,CAAC;AACvB,CAAC;AAED,OAAO,IAAMI,WAAW,GAAG,SAAdA,WAAW,CAAIC,QAAQ,EAAK;EACxC,IAAIL,GAAG,GAAGL,QAAQ,GAAG,sBAAsB,GAAGU,QAAQ;EACtD,OAAOZ,KAAK,CAACQ,IAAI,CAACD,GAAG,CAAC;AACvB,CAAC;AAED,OAAO,IAAMM,UAAU,GAAG,SAAbA,UAAU,CAAIC,IAAI,EAAK;EACnC,IAAIP,GAAG,GAAGN,YAAY,CAACE,WAAW,GAAG,WAAW;EAChD,OAAOH,KAAK,CAAC;IACZe,MAAM,EAAE,MAAM;IACdR,GAAG,EAAEA,GAAG;IACRS,IAAI,EAAEF;EACP,CAAC,CAAC;AACH,CAAC;AAED,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAU,CAAIC,MAAM,EAAK;EACrC,IAAIX,GAAG,GAAGL,QAAQ,GAAG,aAAa;EAClC,OAAOF,KAAK,CAACQ,IAAI,CAACD,GAAG,EAAEW,MAAM,CAAC;AAC/B,CAAC;AAED,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAID,MAAM,EAAK;EACxC,IAAIX,GAAG,GAAGL,QAAQ,GAAG,gBAAgB;EACrC,OAAOF,KAAK,CAACQ,IAAI,CAACD,GAAG,EAAEW,MAAM,CAAC;AAC/B,CAAC;;AAED;AACA,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAc,CAAIC,IAAI,EAAK;EACvC,IAAId,GAAG,GAAGN,YAAY,CAACE,WAAW,GAAG,iBAAiB,oBAAakB,IAAI,CAAE;EAEzE,OAAOrB,KAAK,CAACQ,IAAI,CAACD,GAAG,EAAEc,IAAI,CAAC;AAC7B,CAAC;;AAED;AACA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqB,CAAIC,KAAK,EAAEC,EAAE,EAAK;EACnD,IAAIjB,GAAG,GAAGL,QAAQ,0BAA0B;EAC5C,IAAMuB,MAAM,GAAG;IACdF,KAAK,EAAEA,KAAK;IACZC,EAAE,EAAEA;EACL,CAAC;EACD,OAAOxB,KAAK,CAAC;IAAEe,MAAM,EAAE,KAAK;IAAER,GAAG,EAAEA,GAAG;IAAEkB,MAAM,EAAEA;EAAO,CAAC,CAAC;AAC1D,CAAC;AAED,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAIL,IAAI,EAAEE,KAAK,EAAK;EAC7C,IAAIhB,GAAG,GAAGL,QAAQ,GAAG,kBAAkB;EACvC,OAAOF,KAAK,CAAC;IACZe,MAAM,EAAE,MAAM;IACdR,GAAG,EAAEA,GAAG;IACRkB,MAAM,EAAE;MACPF,KAAK,EAAEA;IACR,CAAC;IACDP,IAAI,EAAEK;EACP,CAAC,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module"}
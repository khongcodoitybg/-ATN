{"ast":null,"code":"import _classCallCheck from \"D:\\\\WorkSpace\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\WorkSpace\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\WorkSpace\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\WorkSpace\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\WorkSpace\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\WorkSpace\\\\client\\\\src\\\\app\\\\auth\\\\AuthGuard.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport AppContext from \"app/appContext\";\nimport ConstantList from \"../appConfig\";\nvar AuthGuard = /*#__PURE__*/function (_Component) {\n  _inherits(AuthGuard, _Component);\n  function AuthGuard(props, context) {\n    var _this;\n    _classCallCheck(this, AuthGuard);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AuthGuard).call(this, props));\n    var routes = context.routes;\n    _this.state = {\n      authenticated: true,\n      routes: routes\n    };\n    return _this;\n  }\n  _createClass(AuthGuard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // if (!this.state.authenticated) {\n      //   this.redirectRoute(this.props);\n      // }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      // if (!this.state.authenticated) {\n      //   this.redirectRoute(this.props);\n      // }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      // return nextState.authenticated !== this.state.authenticated;\n    }\n  }, {\n    key: \"redirectRoute\",\n    value: function redirectRoute(props) {\n      var location = props.location,\n        history = props.history;\n      var pathname = location.pathname;\n      history.push({\n        //pathname: ConstantList.ROOT_PATH + \"session/signin\",\n        pathname: ConstantList.HOME_PAGE,\n        state: {\n          redirectUrl: pathname\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var authenticated = this.state.authenticated;\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, children);\n\n      //return authenticated ? <Fragment>{children}</Fragment> : null;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var location = props.location,\n        user = props.user;\n      var pathname = location.pathname;\n      var matched = state.routes.find(function (r) {\n        return r.path === pathname;\n      });\n      var authenticated = matched && matched.auth && matched.auth.length ? matched.auth.includes(user.role) : true;\n      return {\n        authenticated: authenticated\n      };\n    }\n  }]);\n  return AuthGuard;\n}(Component);\nAuthGuard.contextType = AppContext;\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\nexport default withRouter(connect(mapStateToProps)(AuthGuard));","map":{"version":3,"names":["React","Component","Fragment","withRouter","connect","AppContext","ConstantList","AuthGuard","props","context","routes","state","authenticated","nextProps","nextState","location","history","pathname","push","HOME_PAGE","redirectUrl","children","user","matched","find","r","path","auth","length","includes","role","contextType","mapStateToProps"],"sources":["D:/WorkSpace/client/src/app/auth/AuthGuard.jsx"],"sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport AppContext from \"app/appContext\";\nimport ConstantList from \"../appConfig\";\nclass AuthGuard extends Component {\n  constructor(props, context) {\n    super(props);\n    let { routes } = context;\n\n    this.state = {\n      authenticated: true,\n      routes\n    };\n  }\n\n  componentDidMount() {\n    // if (!this.state.authenticated) {\n    //   this.redirectRoute(this.props);\n    // }\n  }\n\n  componentDidUpdate() {\n    // if (!this.state.authenticated) {\n    //   this.redirectRoute(this.props);\n    // }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // return nextState.authenticated !== this.state.authenticated;\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const { location, user } = props;\n    const { pathname } = location;\n    const matched = state.routes.find(r => r.path === pathname);\n    const authenticated =\n      matched && matched.auth && matched.auth.length\n        ? matched.auth.includes(user.role)\n        : true;\n\n    return {\n      authenticated\n    };\n  }\n\n  redirectRoute(props) {\n    const { location, history } = props;\n    const { pathname } = location;\n\n    history.push({\n      //pathname: ConstantList.ROOT_PATH + \"session/signin\",\n      pathname: ConstantList.HOME_PAGE,\n      state: { redirectUrl: pathname }\n    });\n  }\n\n  render() {\n    let { children } = this.props;\n    const { authenticated } = this.state;\n\n     return <Fragment>{children}</Fragment>;\n\n    //return authenticated ? <Fragment>{children}</Fragment> : null;\n  }\n}\n\nAuthGuard.contextType = AppContext;\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default withRouter(connect(mapStateToProps)(AuthGuard));\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,UAAU,MAAM,gBAAgB;AACvC,OAAOC,YAAY,MAAM,cAAc;AAAC,IAClCC,SAAS;EAAA;EACb,mBAAYC,KAAK,EAAEC,OAAO,EAAE;IAAA;IAAA;IAC1B,+EAAMD,KAAK;IAAE,IACPE,MAAM,GAAKD,OAAO,CAAlBC,MAAM;IAEZ,MAAKC,KAAK,GAAG;MACXC,aAAa,EAAE,IAAI;MACnBF,MAAM,EAANA;IACF,CAAC;IAAC;EACJ;EAAC;IAAA;IAAA,oCAEmB;MAClB;MACA;MACA;IAAA;EACD;IAAA;IAAA,qCAEoB;MACnB;MACA;MACA;IAAA;EACD;IAAA;IAAA,sCAEqBG,SAAS,EAAEC,SAAS,EAAE;MAC1C;IAAA;EACD;IAAA;IAAA,8BAgBaN,KAAK,EAAE;MAAA,IACXO,QAAQ,GAAcP,KAAK,CAA3BO,QAAQ;QAAEC,OAAO,GAAKR,KAAK,CAAjBQ,OAAO;MAAA,IACjBC,QAAQ,GAAKF,QAAQ,CAArBE,QAAQ;MAEhBD,OAAO,CAACE,IAAI,CAAC;QACX;QACAD,QAAQ,EAAEX,YAAY,CAACa,SAAS;QAChCR,KAAK,EAAE;UAAES,WAAW,EAAEH;QAAS;MACjC,CAAC,CAAC;IACJ;EAAC;IAAA;IAAA,yBAEQ;MAAA,IACDI,QAAQ,GAAK,IAAI,CAACb,KAAK,CAAvBa,QAAQ;MAAA,IACNT,aAAa,GAAK,IAAI,CAACD,KAAK,CAA5BC,aAAa;MAEpB,oBAAO,oBAAC,QAAQ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAES,QAAQ,CAAY;;MAEvC;IACF;EAAC;IAAA;IAAA,yCAhC+Bb,KAAK,EAAEG,KAAK,EAAE;MAAA,IACpCI,QAAQ,GAAWP,KAAK,CAAxBO,QAAQ;QAAEO,IAAI,GAAKd,KAAK,CAAdc,IAAI;MAAA,IACdL,QAAQ,GAAKF,QAAQ,CAArBE,QAAQ;MAChB,IAAMM,OAAO,GAAGZ,KAAK,CAACD,MAAM,CAACc,IAAI,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACC,IAAI,KAAKT,QAAQ;MAAA,EAAC;MAC3D,IAAML,aAAa,GACjBW,OAAO,IAAIA,OAAO,CAACI,IAAI,IAAIJ,OAAO,CAACI,IAAI,CAACC,MAAM,GAC1CL,OAAO,CAACI,IAAI,CAACE,QAAQ,CAACP,IAAI,CAACQ,IAAI,CAAC,GAChC,IAAI;MAEV,OAAO;QACLlB,aAAa,EAAbA;MACF,CAAC;IACH;EAAC;EAAA;AAAA,EAvCqBX,SAAS;AA8DjCM,SAAS,CAACwB,WAAW,GAAG1B,UAAU;AAElC,IAAM2B,eAAe,GAAG,SAAlBA,eAAe,CAAGrB,KAAK;EAAA,OAAK;IAChCW,IAAI,EAAEX,KAAK,CAACW;EACd,CAAC;AAAA,CAAC;AAEF,eAAenB,UAAU,CAACC,OAAO,CAAC4B,eAAe,CAAC,CAACzB,SAAS,CAAC,CAAC"},"metadata":{},"sourceType":"module"}
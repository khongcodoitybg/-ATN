{"ast":null,"code":"import axiosMiddleware from \"redux-axios-middleware\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport RootReducer from \"./reducers/RootReducer\";\nimport HttpService from \"app/services/HttpService\";\nvar initialState = {};\n\n//const middlewares = [thunk];\nvar middlewares = [thunk,\n//routerMiddleware(browserHistory),\naxiosMiddleware(HttpService.getAxiosClient())];\nexport var Store = createStore(RootReducer, initialState, compose(applyMiddleware.apply(void 0, middlewares)\n// applyMiddleware(...middlewares),\n// window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n));","map":{"version":3,"names":["axiosMiddleware","thunk","createStore","applyMiddleware","compose","RootReducer","HttpService","initialState","middlewares","getAxiosClient","Store"],"sources":["D:/WorkSpace/client/src/app/redux/Store.js"],"sourcesContent":["import axiosMiddleware from \"redux-axios-middleware\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport RootReducer from \"./reducers/RootReducer\";\nimport HttpService from \"app/services/HttpService\";\nconst initialState = {};\n\n//const middlewares = [thunk];\nconst middlewares = [\n  thunk,\n  //routerMiddleware(browserHistory),\n  axiosMiddleware(HttpService.getAxiosClient())\n];\nexport const Store = createStore(\n  RootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middlewares)\n    // applyMiddleware(...middlewares),\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n"],"mappings":"AAAA,OAAOA,eAAe,MAAM,wBAAwB;AACpD,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,WAAW,EAAEC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAC7D,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,IAAMC,YAAY,GAAG,CAAC,CAAC;;AAEvB;AACA,IAAMC,WAAW,GAAG,CAClBP,KAAK;AACL;AACAD,eAAe,CAACM,WAAW,CAACG,cAAc,EAAE,CAAC,CAC9C;AACD,OAAO,IAAMC,KAAK,GAAGR,WAAW,CAC9BG,WAAW,EACXE,YAAY,EACZH,OAAO,CACLD,eAAe,eAAIK,WAAW;AAC9B;AACA;AAAA,CACD,CACF"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import Keycloak from \"keycloak-js\";\nimport ConstantsList from '../appConfig';\nimport JwtAuthService from './jwtAuthService';\nvar _kc = new Keycloak(ConstantsList.ROOT_PATH + 'keycloak.json');\n\n/**\n * Initializes Keycloak instance and calls the provided callback function if successfully authenticated.\n *\n * @param onAuthenticatedCallback\n */\nvar initKeycloak = function initKeycloak(onAuthenticatedCallback) {\n  _kc.init({\n    onLoad: 'check-sso',\n    promiseType: 'native',\n    silentCheckSsoRedirectUri: window.location.origin + '/' + ConstantsList.ROOT_PATH + '/silent-check-sso.html',\n    pkceMethod: 'S256'\n  }).then(function (authenticated) {\n    if (authenticated) {\n      JwtAuthService.setLoginToken(_kc.token); //Xem lại hàm này để làm chuẩn xác hơn\n      onAuthenticatedCallback();\n    } else {\n      console.warn(\"not authenticated!\");\n      doLogin();\n    }\n  });\n};\nvar doLogin = _kc.login;\nvar doLogout = _kc.logout;\nvar getToken = function getToken() {\n  return _kc.token;\n};\nvar updateToken = function updateToken(successCallback) {\n  return _kc.updateToken(5).then(successCallback).catch(doLogin);\n};\nvar getUsername = function getUsername() {\n  return _kc.tokenParsed.preferred_username;\n};\nexport default {\n  initKeycloak: initKeycloak,\n  doLogin: doLogin,\n  doLogout: doLogout,\n  getToken: getToken,\n  updateToken: updateToken,\n  getUsername: getUsername\n};","map":{"version":3,"names":["Keycloak","ConstantsList","JwtAuthService","_kc","ROOT_PATH","initKeycloak","onAuthenticatedCallback","init","onLoad","promiseType","silentCheckSsoRedirectUri","window","location","origin","pkceMethod","then","authenticated","setLoginToken","token","console","warn","doLogin","login","doLogout","logout","getToken","updateToken","successCallback","catch","getUsername","tokenParsed","preferred_username"],"sources":["D:/WorkSpace/client/src/app/services/UserService.js"],"sourcesContent":["import Keycloak from \"keycloak-js\";\nimport ConstantsList from '../appConfig';\nimport JwtAuthService from './jwtAuthService';\nconst _kc = new Keycloak(ConstantsList.ROOT_PATH+'keycloak.json');\n\n/**\n * Initializes Keycloak instance and calls the provided callback function if successfully authenticated.\n *\n * @param onAuthenticatedCallback\n */\nconst initKeycloak = (onAuthenticatedCallback) => {\n  _kc.init({\n    onLoad: 'check-sso',\n    promiseType: 'native',\n    silentCheckSsoRedirectUri: window.location.origin +'/'+ConstantsList.ROOT_PATH+ '/silent-check-sso.html',\n    pkceMethod: 'S256',\n  })\n    .then((authenticated) => {\n      if (authenticated) {\n        JwtAuthService.setLoginToken(_kc.token);//Xem lại hàm này để làm chuẩn xác hơn\n        onAuthenticatedCallback();\n      } else {\n        console.warn(\"not authenticated!\");\n        doLogin();\n      }\n    })\n};\n\nconst doLogin = _kc.login;\n\nconst doLogout = _kc.logout;\n\nconst getToken = () => _kc.token;\n\nconst updateToken = (successCallback) => {\n  return _kc.updateToken(5)\n    .then(successCallback)\n    .catch(doLogin)\n};\n\nconst getUsername = () => _kc.tokenParsed.preferred_username;\n\nexport default {\n  initKeycloak,\n  doLogin,\n  doLogout,\n  getToken,\n  updateToken,\n  getUsername,\n}\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,aAAa;AAClC,OAAOC,aAAa,MAAM,cAAc;AACxC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,IAAMC,GAAG,GAAG,IAAIH,QAAQ,CAACC,aAAa,CAACG,SAAS,GAAC,eAAe,CAAC;;AAEjE;AACA;AACA;AACA;AACA;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,uBAAuB,EAAK;EAChDH,GAAG,CAACI,IAAI,CAAC;IACPC,MAAM,EAAE,WAAW;IACnBC,WAAW,EAAE,QAAQ;IACrBC,yBAAyB,EAAEC,MAAM,CAACC,QAAQ,CAACC,MAAM,GAAE,GAAG,GAACZ,aAAa,CAACG,SAAS,GAAE,wBAAwB;IACxGU,UAAU,EAAE;EACd,CAAC,CAAC,CACCC,IAAI,CAAC,UAACC,aAAa,EAAK;IACvB,IAAIA,aAAa,EAAE;MACjBd,cAAc,CAACe,aAAa,CAACd,GAAG,CAACe,KAAK,CAAC,CAAC;MACxCZ,uBAAuB,EAAE;IAC3B,CAAC,MAAM;MACLa,OAAO,CAACC,IAAI,CAAC,oBAAoB,CAAC;MAClCC,OAAO,EAAE;IACX;EACF,CAAC,CAAC;AACN,CAAC;AAED,IAAMA,OAAO,GAAGlB,GAAG,CAACmB,KAAK;AAEzB,IAAMC,QAAQ,GAAGpB,GAAG,CAACqB,MAAM;AAE3B,IAAMC,QAAQ,GAAG,SAAXA,QAAQ;EAAA,OAAStB,GAAG,CAACe,KAAK;AAAA;AAEhC,IAAMQ,WAAW,GAAG,SAAdA,WAAW,CAAIC,eAAe,EAAK;EACvC,OAAOxB,GAAG,CAACuB,WAAW,CAAC,CAAC,CAAC,CACtBX,IAAI,CAACY,eAAe,CAAC,CACrBC,KAAK,CAACP,OAAO,CAAC;AACnB,CAAC;AAED,IAAMQ,WAAW,GAAG,SAAdA,WAAW;EAAA,OAAS1B,GAAG,CAAC2B,WAAW,CAACC,kBAAkB;AAAA;AAE5D,eAAe;EACb1B,YAAY,EAAZA,YAAY;EACZgB,OAAO,EAAPA,OAAO;EACPE,QAAQ,EAARA,QAAQ;EACRE,QAAQ,EAARA,QAAQ;EACRC,WAAW,EAAXA,WAAW;EACXG,WAAW,EAAXA;AACF,CAAC"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"D:\\\\WorkSpace\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WorkSpace\\\\client\\\\src\\\\app\\\\EgretLayout\\\\SharedCompoents\\\\NotificationBar.jsx\";\nimport React from 'react';\nimport { MuiThemeProvider } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/styles';\nimport { getTimeDifference } from 'utils.js';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getNotification, deleteAllNotification, deleteNotification } from '../../redux/actions/NotificationActions';\nfunction NotificationBar(props) {\n  var container = props.container,\n    theme = props.theme,\n    settings = props.settings,\n    _props$notification = props.notification,\n    notifcationList = _props$notification === void 0 ? [] : _props$notification,\n    getNotification = props.getNotification,\n    deleteAllNotification = props.deleteAllNotification,\n    deleteNotification = props.deleteNotification;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    panelOpen = _React$useState2[0],\n    setPanelOpen = _React$useState2[1];\n  function handleDrawerToggle() {\n    if (!panelOpen) {\n      getNotification();\n    }\n    setPanelOpen(!panelOpen);\n  }\n  var parentThemePalette = theme.palette;\n  // console.log(theme);\n\n  return /*#__PURE__*/React.createElement(MuiThemeProvider, {\n    theme: settings.themes[settings.activeTheme],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }\n  });\n}\nNotificationBar.propTypes = {\n  settings: PropTypes.object.isRequired,\n  notification: PropTypes.array.isRequired\n};\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    getNotification: PropTypes.func.isRequired,\n    deleteNotification: PropTypes.func.isRequired,\n    deleteAllNotification: PropTypes.func.isRequired,\n    notification: state.notification,\n    settings: state.layout.settings\n  };\n};\nexport default withStyles({}, {\n  withTheme: true\n})(connect(mapStateToProps, {\n  getNotification: getNotification,\n  deleteNotification: deleteNotification,\n  deleteAllNotification: deleteAllNotification\n})(NotificationBar));","map":{"version":3,"names":["React","MuiThemeProvider","Link","withStyles","getTimeDifference","PropTypes","connect","getNotification","deleteAllNotification","deleteNotification","NotificationBar","props","container","theme","settings","notification","notifcationList","useState","panelOpen","setPanelOpen","handleDrawerToggle","parentThemePalette","palette","themes","activeTheme","propTypes","object","isRequired","array","mapStateToProps","state","func","layout","withTheme"],"sources":["D:/WorkSpace/client/src/app/EgretLayout/SharedCompoents/NotificationBar.jsx"],"sourcesContent":["import React from 'react';\nimport { MuiThemeProvider } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/styles';\nimport { getTimeDifference } from 'utils.js';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n\tgetNotification,\n\tdeleteAllNotification,\n\tdeleteNotification,\n} from '../../redux/actions/NotificationActions';\n\nfunction NotificationBar(props) {\n\tconst {\n\t\tcontainer,\n\t\ttheme,\n\t\tsettings,\n\t\tnotification: notifcationList = [],\n\t\tgetNotification,\n\t\tdeleteAllNotification,\n\t\tdeleteNotification,\n\t} = props;\n\n\tconst [panelOpen, setPanelOpen] = React.useState(false);\n\n\tfunction handleDrawerToggle() {\n\t\tif (!panelOpen) {\n\t\t\tgetNotification();\n\t\t}\n\t\tsetPanelOpen(!panelOpen);\n\t}\n\tconst parentThemePalette = theme.palette;\n\t// console.log(theme);\n\n\treturn (\n\t\t<MuiThemeProvider theme={settings.themes[settings.activeTheme]}>\n\t\t\t{/* <IconButton\n        onClick={handleDrawerToggle}\n        style={{\n          color:\n            parentThemePalette.type === \"light\"\n              ? parentThemePalette.text.secondary\n              : parentThemePalette.text.primary\n        }}\n      >\n        <Badge color=\"secondary\" badgeContent={5}>\n          <Icon>notifications</Icon>\n        </Badge>\n      </IconButton> */}\n\n\t\t\t{/* <Drawer\n        width={\"100px\"}\n        container={container}\n        variant=\"temporary\"\n        anchor={\"right\"}\n        open={panelOpen}\n        onClose={handleDrawerToggle}\n        ModalProps={{\n          keepMounted: true\n        }}\n      >\n        <div className=\"notification\">\n          <div className=\"notification__topbar flex flex-middle p-16 mb-24\">\n            <Icon color=\"primary\">notifications</Icon>\n            <h5 className=\"ml-8 my-0 font-weight-500\">Notifications</h5>\n          </div>\n\n          {notifcationList.map(notification => (\n            <div\n              key={notification.id}\n              className=\"notification__card position-relative\"\n            >\n              <IconButton\n                size=\"small\"\n                className=\"delete-button bg-light-gray mr-24\"\n                onClick={() => deleteNotification(notification.id)}\n              >\n                <Icon className=\"text-muted\" fontSize=\"small\">\n                  clear\n                </Icon>\n              </IconButton>\n              <Link to={`/${notification.path}`} onClick={handleDrawerToggle}>\n                <Card className=\"mx-16 mb-24\" elevation={3}>\n                  <div className=\"card__topbar flex flex-middle flex-space-between p-8 bg-light-gray\">\n                    <div className=\"flex\">\n                      <div className=\"card__topbar__button\">\n                        <Icon\n                          className=\"card__topbar__icon\"\n                          fontSize=\"small\"\n                          color={notification.icon.color}\n                        >\n                          {notification.icon.name}\n                        </Icon>\n                      </div>\n                      <span className=\"ml-4 font-weight-500 text-muted\">\n                        {notification.heading}\n                      </span>\n                    </div>\n                    <small className=\"card__topbar__time text-muted\">\n                      {getTimeDifference(new Date(notification.timestamp))} ago\n                    </small>\n                  </div>\n                  <div className=\"px-16 pt-8 pb-16\">\n                    <p className=\"m-0\">{notification.title}</p>\n                    <small className=\"text-muted\">\n                      {notification.subtitle}\n                    </small>\n                  </div>\n                </Card>\n              </Link>\n            </div>\n          ))}\n\n          <div className=\"text-center\">\n            <Button onClick={deleteAllNotification}>Clear Notifications</Button>\n          </div>\n        </div>\n      </Drawer> */}\n\t\t</MuiThemeProvider>\n\t);\n}\n\nNotificationBar.propTypes = {\n\tsettings: PropTypes.object.isRequired,\n\tnotification: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\tgetNotification: PropTypes.func.isRequired,\n\tdeleteNotification: PropTypes.func.isRequired,\n\tdeleteAllNotification: PropTypes.func.isRequired,\n\tnotification: state.notification,\n\tsettings: state.layout.settings,\n});\n\nexport default withStyles(\n\t{},\n\t{ withTheme: true }\n)(\n\tconnect(mapStateToProps, {\n\t\tgetNotification,\n\t\tdeleteNotification,\n\t\tdeleteAllNotification,\n\t})(NotificationBar)\n);\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,mBAAmB;AACpD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,iBAAiB,QAAQ,UAAU;AAC5C,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,OAAO,QAAQ,aAAa;AACrC,SACCC,eAAe,EACfC,qBAAqB,EACrBC,kBAAkB,QACZ,yCAAyC;AAEhD,SAASC,eAAe,CAACC,KAAK,EAAE;EAAA,IAE9BC,SAAS,GAOND,KAAK,CAPRC,SAAS;IACTC,KAAK,GAMFF,KAAK,CANRE,KAAK;IACLC,QAAQ,GAKLH,KAAK,CALRG,QAAQ;IAAA,sBAKLH,KAAK,CAJRI,YAAY;IAAEC,eAAe,oCAAG,EAAE;IAClCT,eAAe,GAGZI,KAAK,CAHRJ,eAAe;IACfC,qBAAqB,GAElBG,KAAK,CAFRH,qBAAqB;IACrBC,kBAAkB,GACfE,KAAK,CADRF,kBAAkB;EAAA,sBAGeT,KAAK,CAACiB,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAhDC,SAAS;IAAEC,YAAY;EAE9B,SAASC,kBAAkB,GAAG;IAC7B,IAAI,CAACF,SAAS,EAAE;MACfX,eAAe,EAAE;IAClB;IACAY,YAAY,CAAC,CAACD,SAAS,CAAC;EACzB;EACA,IAAMG,kBAAkB,GAAGR,KAAK,CAACS,OAAO;EACxC;;EAEA,oBACC,oBAAC,gBAAgB;IAAC,KAAK,EAAER,QAAQ,CAACS,MAAM,CAACT,QAAQ,CAACU,WAAW,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAmF5C;AAErB;AAEAd,eAAe,CAACe,SAAS,GAAG;EAC3BX,QAAQ,EAAET,SAAS,CAACqB,MAAM,CAACC,UAAU;EACrCZ,YAAY,EAAEV,SAAS,CAACuB,KAAK,CAACD;AAC/B,CAAC;AAED,IAAME,eAAe,GAAG,SAAlBA,eAAe,CAAIC,KAAK;EAAA,OAAM;IACnCvB,eAAe,EAAEF,SAAS,CAAC0B,IAAI,CAACJ,UAAU;IAC1ClB,kBAAkB,EAAEJ,SAAS,CAAC0B,IAAI,CAACJ,UAAU;IAC7CnB,qBAAqB,EAAEH,SAAS,CAAC0B,IAAI,CAACJ,UAAU;IAChDZ,YAAY,EAAEe,KAAK,CAACf,YAAY;IAChCD,QAAQ,EAAEgB,KAAK,CAACE,MAAM,CAAClB;EACxB,CAAC;AAAA,CAAC;AAEF,eAAeX,UAAU,CACxB,CAAC,CAAC,EACF;EAAE8B,SAAS,EAAE;AAAK,CAAC,CACnB,CACA3B,OAAO,CAACuB,eAAe,EAAE;EACxBtB,eAAe,EAAfA,eAAe;EACfE,kBAAkB,EAAlBA,kBAAkB;EAClBD,qBAAqB,EAArBA;AACD,CAAC,CAAC,CAACE,eAAe,CAAC,CACnB"},"metadata":{},"sourceType":"module"}
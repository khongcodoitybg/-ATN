{"ast":null,"code":"import _classCallCheck from \"D:\\\\WorkSpace\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firebase-firestore';\nimport firebaseConfig from './firebaseConfig';\nvar FirebaseAuthService =\n//   database;\n//   storage;\n\nfunction FirebaseAuthService() {\n  var _this = this;\n  _classCallCheck(this, FirebaseAuthService);\n  this.init = function () {\n    firebase.initializeApp(firebaseConfig);\n  };\n  this.checkAuthStatus = function (callback) {\n    _this.auth.onAuthStateChanged(callback);\n  };\n  this.signUpWithEmailAndPassword = function (email, password) {\n    return _this.auth.createUserWithEmailAndPassword(email, password);\n  };\n  this.signInWithEmailAndPassword = function (email, password) {\n    return _this.auth.signInWithEmailAndPassword(email, password);\n  };\n  this.signInWithPopup = function (media) {\n    switch (media) {\n      case 'google':\n        return _this.auth.signInWithPopup(_this.googleProvider);\n      case 'facebook':\n        return _this.auth.signInWithPopup(_this.facebookProvider);\n      case 'twitter':\n        return _this.auth.signInWithPopup(_this.twitterProvider);\n      default:\n        break;\n    }\n  };\n  this.signInWithPhoneNumber = function (phoneNumber) {\n    return _this.auth.signInWithPhoneNumber(phoneNumber);\n  };\n  this.getUserData = function (docId) {\n    //   generally it's better to use uid for docId\n    _this.firestore.collection('users').doc(docId).get().then(function (doc) {});\n  };\n  this.getAllUser = function () {\n    _this.firestore.collection('users').get().then(function (docList) {\n      docList.forEach(function (doc) {});\n    });\n  };\n  this.signOut = function () {\n    return _this.auth.signOut();\n  };\n} // UNCOMMENT IF YOU WANT TO USE FIREBASE\n// this.init();\n// this.auth = firebase.auth();\n// this.firestore = firebase.firestore();\n//   this.database  = firebase.database();\n//   this.storage = firebase.storage();\n// this.googleProvider = new firebase.auth.GoogleAuthProvider();\n// this.facebookProvider = new firebase.auth.FacebookAuthProvider();\n// this.twitterProvider = new firebase.auth.TwitterAuthProvider();\n;\n\nvar instance = new FirebaseAuthService();\nexport default instance;","map":{"version":3,"names":["firebase","firebaseConfig","FirebaseAuthService","init","initializeApp","checkAuthStatus","callback","auth","onAuthStateChanged","signUpWithEmailAndPassword","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signInWithPopup","media","googleProvider","facebookProvider","twitterProvider","signInWithPhoneNumber","phoneNumber","getUserData","docId","firestore","collection","doc","get","then","getAllUser","docList","forEach","signOut","instance"],"sources":["D:/WorkSpace/client/src/app/services/firebase/firebaseAuthService.js"],"sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firebase-firestore';\nimport firebaseConfig from './firebaseConfig';\n\nclass FirebaseAuthService {\n\tauth;\n\tfirestore;\n\t//   database;\n\t//   storage;\n\n\tgoogleProvider;\n\tfacebookProvider;\n\ttwitterProvider;\n\n\tconstructor() {\n\t\t// UNCOMMENT IF YOU WANT TO USE FIREBASE\n\t\t// this.init();\n\t\t// this.auth = firebase.auth();\n\t\t// this.firestore = firebase.firestore();\n\t\t//   this.database  = firebase.database();\n\t\t//   this.storage = firebase.storage();\n\t\t// this.googleProvider = new firebase.auth.GoogleAuthProvider();\n\t\t// this.facebookProvider = new firebase.auth.FacebookAuthProvider();\n\t\t// this.twitterProvider = new firebase.auth.TwitterAuthProvider();\n\t}\n\n\tinit = () => {\n\t\tfirebase.initializeApp(firebaseConfig);\n\t};\n\n\tcheckAuthStatus = (callback) => {\n\t\tthis.auth.onAuthStateChanged(callback);\n\t};\n\n\tsignUpWithEmailAndPassword = (email, password) => {\n\t\treturn this.auth.createUserWithEmailAndPassword(email, password);\n\t};\n\n\tsignInWithEmailAndPassword = (email, password) => {\n\t\treturn this.auth.signInWithEmailAndPassword(email, password);\n\t};\n\n\tsignInWithPopup = (media) => {\n\t\tswitch (media) {\n\t\t\tcase 'google':\n\t\t\t\treturn this.auth.signInWithPopup(this.googleProvider);\n\n\t\t\tcase 'facebook':\n\t\t\t\treturn this.auth.signInWithPopup(this.facebookProvider);\n\n\t\t\tcase 'twitter':\n\t\t\t\treturn this.auth.signInWithPopup(this.twitterProvider);\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tsignInWithPhoneNumber = (phoneNumber) => {\n\t\treturn this.auth.signInWithPhoneNumber(phoneNumber);\n\t};\n\n\tgetUserData = (docId) => {\n\t\t//   generally it's better to use uid for docId\n\t\tthis.firestore\n\t\t\t.collection('users')\n\t\t\t.doc(docId)\n\t\t\t.get()\n\t\t\t.then((doc) => {});\n\t};\n\n\tgetAllUser = () => {\n\t\tthis.firestore\n\t\t\t.collection('users')\n\t\t\t.get()\n\t\t\t.then((docList) => {\n\t\t\t\tdocList.forEach((doc) => {});\n\t\t\t});\n\t};\n\n\tsignOut = () => {\n\t\treturn this.auth.signOut();\n\t};\n}\n\nconst instance = new FirebaseAuthService();\n\nexport default instance;\n"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,cAAc;AACnC,OAAO,eAAe;AACtB,OAAO,6BAA6B;AACpC,OAAOC,cAAc,MAAM,kBAAkB;AAAC,IAExCC,mBAAmB;AAGxB;AACA;;AAMA,+BAAc;EAAA;EAAA;EAAA,KAYdC,IAAI,GAAG,YAAM;IACZH,QAAQ,CAACI,aAAa,CAACH,cAAc,CAAC;EACvC,CAAC;EAAA,KAEDI,eAAe,GAAG,UAACC,QAAQ,EAAK;IAC/B,KAAI,CAACC,IAAI,CAACC,kBAAkB,CAACF,QAAQ,CAAC;EACvC,CAAC;EAAA,KAEDG,0BAA0B,GAAG,UAACC,KAAK,EAAEC,QAAQ,EAAK;IACjD,OAAO,KAAI,CAACJ,IAAI,CAACK,8BAA8B,CAACF,KAAK,EAAEC,QAAQ,CAAC;EACjE,CAAC;EAAA,KAEDE,0BAA0B,GAAG,UAACH,KAAK,EAAEC,QAAQ,EAAK;IACjD,OAAO,KAAI,CAACJ,IAAI,CAACM,0BAA0B,CAACH,KAAK,EAAEC,QAAQ,CAAC;EAC7D,CAAC;EAAA,KAEDG,eAAe,GAAG,UAACC,KAAK,EAAK;IAC5B,QAAQA,KAAK;MACZ,KAAK,QAAQ;QACZ,OAAO,KAAI,CAACR,IAAI,CAACO,eAAe,CAAC,KAAI,CAACE,cAAc,CAAC;MAEtD,KAAK,UAAU;QACd,OAAO,KAAI,CAACT,IAAI,CAACO,eAAe,CAAC,KAAI,CAACG,gBAAgB,CAAC;MAExD,KAAK,SAAS;QACb,OAAO,KAAI,CAACV,IAAI,CAACO,eAAe,CAAC,KAAI,CAACI,eAAe,CAAC;MAEvD;QACC;IAAM;EAET,CAAC;EAAA,KAEDC,qBAAqB,GAAG,UAACC,WAAW,EAAK;IACxC,OAAO,KAAI,CAACb,IAAI,CAACY,qBAAqB,CAACC,WAAW,CAAC;EACpD,CAAC;EAAA,KAEDC,WAAW,GAAG,UAACC,KAAK,EAAK;IACxB;IACA,KAAI,CAACC,SAAS,CACZC,UAAU,CAAC,OAAO,CAAC,CACnBC,GAAG,CAACH,KAAK,CAAC,CACVI,GAAG,EAAE,CACLC,IAAI,CAAC,UAACF,GAAG,EAAK,CAAC,CAAC,CAAC;EACpB,CAAC;EAAA,KAEDG,UAAU,GAAG,YAAM;IAClB,KAAI,CAACL,SAAS,CACZC,UAAU,CAAC,OAAO,CAAC,CACnBE,GAAG,EAAE,CACLC,IAAI,CAAC,UAACE,OAAO,EAAK;MAClBA,OAAO,CAACC,OAAO,CAAC,UAACL,GAAG,EAAK,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC;EACJ,CAAC;EAAA,KAEDM,OAAO,GAAG,YAAM;IACf,OAAO,KAAI,CAACxB,IAAI,CAACwB,OAAO,EAAE;EAC3B,CAAC;AA1DD,CAAC,CATA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA6DF,IAAMC,QAAQ,GAAG,IAAI9B,mBAAmB,EAAE;AAE1C,eAAe8B,QAAQ"},"metadata":{},"sourceType":"module"}
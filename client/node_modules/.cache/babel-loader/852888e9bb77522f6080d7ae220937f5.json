{"ast":null,"code":"import axios from 'axios';\nimport UserService from './UserService';\nvar HttpMethods = {\n  GET: 'GET',\n  POST: 'POST',\n  DELETE: 'DELETE'\n};\nvar _axios = axios.create();\nvar configure = function configure() {\n  _axios.interceptors.request.use(function (config) {\n    // debugger;\n\n    var cb = function cb() {\n      //config.header(\"Access-Control-Allow-Origin\", \"http://localhost:3000\");\n      //config.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n      //config.headers['Access-Control-Allow-Origin']= \"http://localhost:3000\";\n      //config.headers['Access-Control-Allow-Methods'] =\"Origin, X-Requested-With, Content-Type, Accept\";\n      config.headers.Authorization = \"Bearer \".concat(UserService.getToken());\n      return Promise.resolve(config);\n    };\n    return UserService.updateToken(cb);\n  });\n};\nvar onError = function onError() {\n  _axios.interceptors.response.use(function (res) {\n    return res;\n  }, function (err) {\n    if (err.response.status === 404) {\n      throw new Error(\"\".concat(err.config.url, \" not found\"));\n    }\n    throw err;\n    // console.log(err.response.status);\n    // return err;\n  });\n};\n\nvar getAxiosClient = function getAxiosClient() {\n  return _axios;\n};\nexport default {\n  HttpMethods: HttpMethods,\n  configure: configure,\n  getAxiosClient: getAxiosClient,\n  onError: onError\n};","map":{"version":3,"names":["axios","UserService","HttpMethods","GET","POST","DELETE","_axios","create","configure","interceptors","request","use","config","cb","headers","Authorization","getToken","Promise","resolve","updateToken","onError","response","res","err","status","Error","url","getAxiosClient"],"sources":["D:/WorkSpace/client/src/app/services/HttpService.js"],"sourcesContent":["import axios from 'axios';\nimport UserService from './UserService';\n\nconst HttpMethods = {\n\tGET: 'GET',\n\tPOST: 'POST',\n\tDELETE: 'DELETE',\n};\n\nconst _axios = axios.create();\n\nconst configure = () => {\n\t_axios.interceptors.request.use((config) => {\n\t\t// debugger;\n\n\t\tconst cb = () => {\n\t\t\t//config.header(\"Access-Control-Allow-Origin\", \"http://localhost:3000\");\n\t\t\t//config.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n\t\t\t//config.headers['Access-Control-Allow-Origin']= \"http://localhost:3000\";\n\t\t\t//config.headers['Access-Control-Allow-Methods'] =\"Origin, X-Requested-With, Content-Type, Accept\";\n\t\t\tconfig.headers.Authorization = `Bearer ${UserService.getToken()}`;\n\t\t\treturn Promise.resolve(config);\n\t\t};\n\t\treturn UserService.updateToken(cb);\n\t});\n};\n\nconst onError = () => {\n\t_axios.interceptors.response.use(\n\t\t(res) => {\n\t\t\treturn res;\n\t\t},\n\t\t(err) => {\n\t\t\t\n\t\t\tif (err.response.status === 404) {\n\t\t\t\tthrow new Error(`${err.config.url} not found`);\n\t\t\t}\n\t\t\tthrow err;\n\t\t\t// console.log(err.response.status);\n\t\t\t// return err;\n\t\t}\n\t);\n};\n\nconst getAxiosClient = () => _axios;\n\nexport default {\n\tHttpMethods,\n\tconfigure,\n\tgetAxiosClient,\n\tonError,\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AAEvC,IAAMC,WAAW,GAAG;EACnBC,GAAG,EAAE,KAAK;EACVC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE;AACT,CAAC;AAED,IAAMC,MAAM,GAAGN,KAAK,CAACO,MAAM,EAAE;AAE7B,IAAMC,SAAS,GAAG,SAAZA,SAAS,GAAS;EACvBF,MAAM,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,UAACC,MAAM,EAAK;IAC3C;;IAEA,IAAMC,EAAE,GAAG,SAALA,EAAE,GAAS;MAChB;MACA;MACA;MACA;MACAD,MAAM,CAACE,OAAO,CAACC,aAAa,oBAAad,WAAW,CAACe,QAAQ,EAAE,CAAE;MACjE,OAAOC,OAAO,CAACC,OAAO,CAACN,MAAM,CAAC;IAC/B,CAAC;IACD,OAAOX,WAAW,CAACkB,WAAW,CAACN,EAAE,CAAC;EACnC,CAAC,CAAC;AACH,CAAC;AAED,IAAMO,OAAO,GAAG,SAAVA,OAAO,GAAS;EACrBd,MAAM,CAACG,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC/B,UAACW,GAAG,EAAK;IACR,OAAOA,GAAG;EACX,CAAC,EACD,UAACC,GAAG,EAAK;IAER,IAAIA,GAAG,CAACF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;MAChC,MAAM,IAAIC,KAAK,WAAIF,GAAG,CAACX,MAAM,CAACc,GAAG,gBAAa;IAC/C;IACA,MAAMH,GAAG;IACT;IACA;EACD,CAAC,CACD;AACF,CAAC;;AAED,IAAMI,cAAc,GAAG,SAAjBA,cAAc;EAAA,OAASrB,MAAM;AAAA;AAEnC,eAAe;EACdJ,WAAW,EAAXA,WAAW;EACXM,SAAS,EAATA,SAAS;EACTmB,cAAc,EAAdA,cAAc;EACdP,OAAO,EAAPA;AACD,CAAC"},"metadata":{},"sourceType":"module"}